.TH FSARCHIVER 8 "30 December 2009"

.SH NAME
fsarchiver \- filesystem archiver

.SH DESCRIPTION
fsarchiver is a system tool that allows you to save the contents of a
filesystem to a compressed archive file. The filesystem contents can be
restored on a device which has a different size and it can be restored on a
different filesystem. Unlike tar/dar, fsarchiver also creates the
filesystem when it extracts the data to devices. Everything is checksummed
in the archive in order to protect the data. If the archive is corrupt, you
just lose the current file, not the whole archive.

.SH LINKS
.SS Official project homepage:
http://www.fsarchiver.org
.SS Quick Start guide:
http://www.fsarchiver.org/quickstart/
.SS Forums where to ask questions:
http://www.fsarchiver.org/forums/
.SS Git repository:
https://github.com/fdupoux/fsarchiver
.SS Report a bug:
https://github.com/fdupoux/fsarchiver/issues

.SH SYNOPSIS
.B fsarchiver [
.I options
.B ] savefs
.I archive
.I device
.B ...
.PP
.B fsarchiver [
.I options
.B ] restfs
.I archive
.BI id= n ,dest= device [,mkfs= fstype ,mkfsopt= options ,label= \
newlabel ,uuid= newuuid ]
.B ...
.PP
.B fsarchiver [
.I options
.B ] savedir
.I archive
.I directory
.B ...
.PP
.B fsarchiver [
.I options
.B ] restdir
.I archive destination
.PP
.B fsarchiver [
.I options
.B ] archinfo
.I archive
.PP
.B fsarchiver [
.I options
.B ] probe [detailed]

.SH COMMANDS
.TP
.B savefs
Save
.I device
filesystem to
.IR archive .
.TP
.B restfs
Restore filesystems from
.IR archive .
This overwrites the existing data on
.IR device .
Zero-based index
.I n
indicates the part of the archive to restore.
Optionally, a filesystem may be converted to
.IR fstype
and extra mkfs
.IR options
specified.
.IR newlabel
and
.IR newuuid
override values stored in the archive.

.TP
.B savedir
Save
.I directories
to
.I archive
(similar to a compressed tarball).
.TP
.B restdir
Restore data from
.I archive
which is not based on a filesystem to
.IR destination .
.TP
.B archinfo
Show information about an existing
.I archive
file and its contents.
.TP
.B probe
Show list of filesystems detected on the disks.

.SH "OPTIONS"
.PP
.IP "\fB\-h, \-\-help\fP"
Show help and information about how to use fsarchiver with examples.
.IP "\fB\-V, \-\-version\fP"
Show program version and exit.
.IP "\fB\-v, \-\-verbose\fP"
Verbose mode (can be used several times to increase the level of details).
The details will be printed to the console.
.IP "\fB\-o, \-\-overwrite\fP"
Overwrite the archive if it already exists instead of failing.
.IP "\fB\-d, \-\-debug\fP"
Debug mode (can be used several times to increase the level of details).
The details will be written in /var/log/fsarchiver.log.
.IP "\fB\-x, \-\-experimental\fP"
Allow to save filesystems which support is considered experimental in
fsarchiver.
.IP "\fB\-A, \-\-allow-rw-mounted\fP"
Allow to save a filesystem which is mounted in read-write (live backup). By
default fsarchiver fails with an error if the device is mounted in
read-write mode which allows modifications to be done on the filesystem
during the backup. Modifications can drive to inconsistencies in the
backup. Using LVM snapshots is the recommended way to make backups since it
will provide consistency, but it is only available for filesystems which
are on LVM logical volumes.
.IP "\fB\-a, \-\-allow-no-acl-xattr\fP"
Allow to save a filesystem when ACLs and extended attributes are not
supported (or are disabled) by the kernel. By default fsarchiver fails with
an error if it cannot access ACLs and extended attributes, since they would
not be saved. If you do not need ACLs and extended attributes preserved
then it is safe to use this option.
.IP "\fB\-e pattern, \-\-exclude=pattern\fP"
Exclude files and directories that match specified pattern. The pattern can
contain shell wildcards such as * and ? or may be either a simple file/dir
name or an absolute file/dir path. You must use quotes around the pattern
each time you use wildcards, else it would be interpreted by the shell. The
wildcards must be interpreted by fsarchiver. See examples below for more
details about this option.
.IP "\fB\-L label, \-\-label=label\fP"
Set the label of the archive: it is just a comment about its contents. It
can be used to remember a particular thing about the archive or the state
of the filesystem for instance.
.IP "\fB\-z level, \-\-compress=level\fP"
Valid compression levels are between 0 (very fast) and 9 (very good). The
memory requirement increases a lot with the best compression levels, and it
is multiplied by the number of compression threads (option -j). Level 9 is
considered as an extreme compression level and requires an huge amount of
memory to run. For more details please read this page:
http://www.fsarchiver.org/compression/
.IP "\fB\-s mbsize, \-\-split=mbsize\fP"
Split the archive into several files of mbsize megabytes each.
.IP "\fB\-j count, \-\-jobs=count\fP"
Create more than one (de)compression thread. Useful on multi-core CPUs. By
default fsarchiver will only use one (de)compression thread (-j 1) and then
only one logical processor will be used for the task. You should use this
option if you have a multi-core CPU or more than one physical CPU on your
computer. The typical way to use it is to specify the number of logical
processors available so that all the processing power is used to
(de)compress the archive very quickly. You may also want to use all logical
processors but one so that your system stays responsive for other
applications.
.IP "\fB\-c password, \-\-cryptpass=password\fP"
Encrypt/decrypt data in archive. Password length: 6 to 64 characters. You
can either provide a real password or a dash (-c -). Use the dash if you do
not want to provide the password in the command line. It will be prompted
in the terminal instead.

.SH EXAMPLES
.SS save only one filesystem (/dev/sda1) to an archive:
fsarchiver savefs /data/myarchive1.fsa /dev/sda1
.SS save two filesystems (/dev/sda1 and /dev/sdb1) to an archive:
fsarchiver savefs /data/myarchive2.fsa /dev/sda1 /dev/sdb1
.SS restore the first filesystem from an archive (first = number 0):
fsarchiver restfs /data/myarchive2.fsa id=0,dest=/dev/sda1
.SS restore the second filesystem from an archive (second = number 1):
fsarchiver restfs /data/myarchive2.fsa id=1,dest=/dev/sdb1
.SS restore two filesystems from an archive (number 0 and 1):
fsarchiver restfs /data/arch2.fsa id=0,dest=/dev/sda1 id=1,dest=/dev/sdb1
.SS restore a filesystem from an archive and convert it to reiserfs:
fsarchiver restfs /data/myarchive1.fsa id=0,dest=/dev/sda1,mkfs=reiserfs
.SS restore a filesystem from an archive and specify extra mkfs options:
fsarchiver restfs /data/myarchive1.fsa id=0,dest=/dev/sda1,mkfs=ext4,mkfsopt="-I 256"
.SS restore a filesystem from an archive and specify a new filesystem label:
fsarchiver restfs /data/myarchive1.fsa id=0,dest=/dev/sda1,label=root
.SS restore a filesystem from an archive and specify a new filesystem UUID:
fsarchiver restfs /data/myarchive1.fsa id=0,dest=/dev/sda1,uuid=5f6e5f4f-dc2a-4dbd-a6ea-9ca997cde75e
.SS save the contents of /usr/src/linux to an archive (similar to tar):
fsarchiver savedir /data/linux-sources.fsa /usr/src/linux
.SS save a filesystem (/dev/sda1) to an archive split into volumes of 680MB:
fsarchiver savefs -s 680 /data/myarchive1.fsa /dev/sda1
.SS save a filesystem and exclude all files/dirs called 'pagefile.*':
fsarchiver savefs /data/myarchive.fsa /dev/sda1 --exclude='pagefile.*'
.SS generic exclude for 'share' such as '/usr/share' and '/usr/local/share':
fsarchiver savefs /data/myarchive.fsa --exclude=share
.SS absolute exclude valid for '/usr/share' but not for '/usr/local/share':
fsarchiver savefs /data/myarchive.fsa --exclude=/usr/share
.SS save a filesystem (/dev/sda1) to an encrypted archive:
fsarchiver savefs -c mypassword /data/myarchive1.fsa /dev/sda1
.SS same as before but prompt for password in the terminal:
fsarchiver savefs -c - /data/myarchive1.fsa /dev/sda1
.SS extract an archive made of simple files to /tmp/extract:
fsarchiver restdir /data/linux-sources.fsa /tmp/extract
.SS show information about an archive and its filesystems:
fsarchiver archinfo /data/myarchive2.fsa

.SH WARNING
.B fsarchiver
is considered stable for Linux filesystems such as EXT4 and XFS but unstable for
NTFS.

.SH AUTHOR
fsarchiver was written by Francois Dupoux. It is released under the
GPL2 (GNU General Public License version 2). This manpage was written
by Ilya Barygin and Francois Dupoux.
